{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Tino\\\\Desktop\\\\workspace\\\\projects\\\\NFTMarketplace\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/Kryptobird.json';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardImage, MDBBtn } from 'mdb-react-ui-kit';\nimport './App.css';\nimport MetaMaskOnboarding from '@metamask/onboarding';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // first up is to detect ethereum provider (metamask)\n                if (window.ethereum) {\n                  window.web3 = new Web3(window.ethereum);\n                } else {\n                  console.log(\"could not connect to metamask\");\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var onboarding, onboardButton, web3, accounts, networkId, networkData, abi, address, contract, totalSupply, i, _KryptoBird;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                onboarding = new MetaMaskOnboarding();\n                onboardButton = document.getElementById(\"connectWallet\");\n\n                if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\n                  onboardButton.innerText = \"Install MetaMask!\";\n\n                  onboardButton.onclick = function () {\n                    onboardButton.innerText = \"Connecting...\";\n                    onboardButton.disabled = true;\n                    onboarding.startOnboarding();\n                  };\n                }\n\n                if (!window.ethereum) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                web3 = window.web3;\n                _context3.next = 8;\n                return window.ethereum.request({\n                  method: 'eth_requestAccounts'\n                });\n\n              case 8:\n                accounts = _context3.sent;\n                console.log(accounts[0]);\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log('in line 41 after account address'); // get networkId\n\n                _context3.next = 14;\n                return web3.eth.net.getId();\n\n              case 14:\n                networkId = _context3.sent;\n                networkData = KryptoBird.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 36;\n                  break;\n                }\n\n                abi = KryptoBird.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                }); // call the total supply of our Krypto Birdz\n\n                _context3.next = 23;\n                return contract.methods.totalSupply().call();\n\n              case 23:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                }); // set up an array to keep track of tokens\n\n                i = 1;\n\n              case 26:\n                if (!(i <= totalSupply)) {\n                  _context3.next = 34;\n                  break;\n                }\n\n                _context3.next = 29;\n                return contract.methods.kryptoBirdz(i - 1).call();\n\n              case 29:\n                _KryptoBird = _context3.sent;\n                this.setState({\n                  kryptoBirdz: [].concat(_toConsumableArray(this.state.kryptoBirdz), [_KryptoBird])\n                });\n\n              case 31:\n                i++;\n                _context3.next = 26;\n                break;\n\n              case 34:\n                _context3.next = 37;\n                break;\n\n              case 36:\n                window.alert('Smart contract not deployed');\n\n              case 37:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (kryptoBird) {\n      _this.state.contract.methods.mint(kryptoBird).send({\n        from: _this.state.account\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          kryptoBirdz: [].concat(_toConsumableArray(_this.state.kryptoBirdz), [kryptoBird])\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      contract: null,\n      totalSupply: 0,\n      kryptoBirdz: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Krypto Mons NFTs (Non Fungible Tokens)\"), React.createElement(\"ul\", {\n        className: \"navbar- nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"wallet-btn btn\",\n        id: \"connectWallet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Connect Wallet\")), React.createElement(\"li\", {\n        className: \"nacv-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        style: {\n          opacity: '0.8'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"kryptoMons - NFT Marketplace\"), React.createElement(\"p\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"The KryptoMons NFT Project is a decentralized application, that allows you to create and launch your own NFTs.\"), React.createElement(\"p\", {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Copy the url link of your digital art and pace it here.\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var kryptoBird = _this2.kryptoBird.value;\n\n          _this2.mint(kryptoBird);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a file location\",\n        className: \"form-control mb-1\",\n        ref: function ref(input) {\n          return _this2.kryptoBird = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          margin: '6px'\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-black\",\n        value: \"MINT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row textCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.kryptoBirdz.map(function (kryptoBird, key) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          className: \"token img\",\n          style: {\n            maxWidth: '22rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(MDBCardImage, {\n          src: kryptoBird,\n          position: \"top\",\n          heigh: \"250rem\",\n          style: {\n            marginRight: '4px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }), React.createElement(MDBCardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(MDBCardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \" kryptoBirdz \"), React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \" This is one of 20 funtokens. Especialy made for friends to flex.\"), React.createElement(MDBBtn, {\n          href: kryptoBird,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Download\")))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Tino\\Desktop\\workspace\\projects\\NFTMarketplace\\src\\components\\App.js"],"names":["React","Component","Web3","detectEthereumProvider","KryptoBird","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBCardImage","MDBBtn","MetaMaskOnboarding","App","loadWeb3","loadBlockchainData","window","ethereum","web3","console","log","onboarding","onboardButton","document","getElementById","isMetaMaskInstalled","innerText","onclick","disabled","startOnboarding","request","method","accounts","setState","account","eth","net","getId","networkId","networkData","networks","abi","address","contract","Contract","methods","totalSupply","call","i","kryptoBirdz","state","alert","props","mint","kryptoBird","send","from","once","receipt","color","opacity","event","preventDefault","value","input","margin","map","key","maxWidth","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"; \r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport KryptoBird from '../abis/Kryptobird.json'; \r\nimport {MDBCard, MDBCardBody, MDBCardTitle, \r\n    MDBCardText, MDBCardImage,MDBBtn} from 'mdb-react-ui-kit';\r\nimport './App.css';\r\nimport MetaMaskOnboarding from '@metamask/onboarding'\r\n\r\n\r\nclass App extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n    }\r\n    \r\n    async loadWeb3(){\r\n        // first up is to detect ethereum provider (metamask)\r\n\r\n          if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n          } else {\r\n              console.log(\"could not connect to metamask\")\r\n          }\r\n    }\r\n\r\n    async loadBlockchainData() {\r\n        const onboarding = new MetaMaskOnboarding();\r\n        const onboardButton = document.getElementById(\"connectWallet\");\r\n\r\n        if (!MetaMaskOnboarding.isMetaMaskInstalled()) {\r\n            onboardButton.innerText = \"Install MetaMask!\";\r\n            onboardButton.onclick = () => {\r\n            onboardButton.innerText = \"Connecting...\";\r\n            onboardButton.disabled = true;\r\n            onboarding.startOnboarding();\r\n            }\r\n        }\r\n\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n\r\n            const web3 = window.web3\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n            console.log(accounts[0])\r\n            this.setState({account: accounts[0]})\r\n            console.log('in line 41 after account address')\r\n\r\n            // get networkId\r\n            const networkId = await web3.eth.net.getId()\r\n            const networkData = KryptoBird.networks[networkId]\r\n            if(networkData) {\r\n                const abi = KryptoBird.abi; \r\n                const address = networkData.address; \r\n                const contract = new web3.eth.Contract(abi, address)\r\n                this.setState({contract})\r\n\r\n                // call the total supply of our Krypto Birdz\r\n                const totalSupply = await contract.methods.totalSupply().call()\r\n                this.setState({totalSupply}) \r\n\r\n                // set up an array to keep track of tokens\r\n                for(let i = 1; i <= totalSupply; i++) {\r\n                    const KryptoBird = await contract.methods.kryptoBirdz(i - 1).call()\r\n                    this.setState({\r\n                        kryptoBirdz:[...this.state.kryptoBirdz, KryptoBird]\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                window.alert('Smart contract not deployed')\r\n            }\r\n        }\r\n        \r\n       \r\n        \r\n        \r\n    }\r\n\r\n\r\n    mint = (kryptoBird) => {\r\n        this.state.contract.methods.mint(kryptoBird).send({from:this.state.account})\r\n        .once('receipt', (receipt) => {\r\n            this.setState({\r\n                kryptoBirdz:[...this.state.kryptoBirdz, kryptoBird]\r\n            })\r\n        })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account: '',\r\n            contract: null,\r\n            totalSupply:0,\r\n            kryptoBirdz:[]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container-filled\">\r\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n                    <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\" style={{color:'white'}}>\r\n                        Krypto Mons NFTs (Non Fungible Tokens)\r\n                    </div>\r\n\r\n                    \r\n                    <ul className=\"navbar- nav px-3\">\r\n                        <button class=\"wallet-btn btn\" id=\"connectWallet\">\r\n                            <span style={{color:'white'}}>Connect Wallet</span>\r\n                        </button>\r\n                        <li className=\"nacv-item text-nowrap d-none d-sm-none d-sm-block\">\r\n                            <small className=\"text-white\">\r\n                                {this.state.account}\r\n                            </small>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n                <div className='container-fluid mt-1'>\r\n                    <div className='row'>\r\n                        <main role='main' className=\"col-lg-12 d-flex text-center\">\r\n                            <div className='content mr-auto ml-auto' style={{opacity:'0.8'}}>\r\n                                <h1 style={{color:'white'}}>\r\n                                    kryptoMons - NFT Marketplace\r\n                                </h1>\r\n                                <p style={{color:'white'}}>The KryptoMons NFT Project is a decentralized application, that allows you to create and launch your own NFTs.\r\n                                </p>\r\n                                <p style={{color:'white'}}>\r\n                                 Copy the url link of your digital art and pace it here.\r\n                                </p>\r\n\r\n                                <form onSubmit={(event) => {\r\n                                    event.preventDefault()\r\n                                    const kryptoBird = this.kryptoBird.value\r\n                                    this.mint(kryptoBird)\r\n                                }}>\r\n                                    <input type='text' placeholder='Add a file location' className='form-control mb-1'\r\n                                    ref={(input) => this.kryptoBird = input}/>\r\n                                    <input style={{margin:'6px'}} type='submit' className='btn btn-primary btn-black' value='MINT' />\r\n                                </form>\r\n\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                            <hr></hr>\r\n                            <div className=\"row textCenter\">\r\n                                {this.state.kryptoBirdz.map((kryptoBird, key) => {\r\n                                    return(\r\n                                        <div >\r\n                                            <div>\r\n                                                <MDBCard className=\"token img\" style={{maxWidth:'22rem'}}>\r\n                                                    <MDBCardImage src={kryptoBird} position='top' heigh='250rem' style={{marginRight:'4px'}} />\r\n                                                    <MDBCardBody>\r\n                                                        <MDBCardTitle> kryptoBirdz </MDBCardTitle>\r\n                                                        <MDBCardText> This is one of 20 funtokens. Especialy made for friends to flex.</MDBCardText>\r\n                                                        <MDBBtn href={kryptoBird}>Download</MDBBtn>\r\n                                                    </MDBCardBody>\r\n                                                </MDBCard>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                                \r\n                            </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}